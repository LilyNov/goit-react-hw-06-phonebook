{"version":3,"sources":["ContactList/ContactList.module.css","App.module.css","Filter/Filter.module.css","redux/contacts.js/contacts-actions.js","redux/contacts.js/contacts-reducer.js","redux/store.js","ContactForm/ContactForm.js","Filter/Filter.js","ContactList/ContactList.js","App.js","index.js","ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","itemsName","itemsNumber","payload","id","uuidv1","name","number","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","Phonebook","useForm","register","handleSubmit","errors","useState","setName","setNumber","dispatch","useDispatch","myNamesInItem","useSelector","reset","handleChange","e","preventDefault","currentTarget","value","className","s","container","onSubmit","map","contact","toLocaleLowerCase","includes","alert","contactsActions","label","input","autoComplete","type","ref","required","minLength","onChange","textError","pattern","btn","connect","OnFilterContacts","placeholder","ContactList","allContacts","normalizedFilter","filterContactsByName","list","item","text","onClick","ondeleteContact","width","App","title","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.802586f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__kcvME\",\"item\":\"ContactList_item__2vNqM\",\"text\":\"ContactList_text__3u9C0\",\"btn\":\"ContactList_btn__2qMDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1dvaj\",\"container\":\"App_container__ShNVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1oj2O\"};","import { v1 as uuidv1 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction(\r\n  'contact/add',\r\n  (itemsName, itemsNumber) => ({\r\n    payload: {\r\n      id: uuidv1(),\r\n      name: itemsName,\r\n      number: itemsNumber,\r\n    },\r\n  }),\r\n);\r\n\r\nexport const deleteContact = createAction('contact/delete');\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n\r\n// ***Redux***\r\n\r\n// import * as type from './contacts-types';\r\n\r\n// export const addContact = (itemsName, itemsNumber) => ({\r\n//   type: type.ADD,\r\n//   payload: {\r\n//     id: uuidv1(),\r\n//     name: itemsName,\r\n//     number: itemsNumber,\r\n//   },\r\n// });\r\n\r\n// export const deleteContact = contactId => ({\r\n//   type: type.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const changeFilter = value => ({\r\n//   type: type.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './contacts-actions';\r\n\r\n// console.log(actions.addContact.type);\r\n\r\nconst defaultContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(defaultContacts, {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\n// ***Redux***\r\n\r\n// import * as type from './contacts-types';\r\n\r\n// const itemsReducer = (state = defaultContacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case type.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case type.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReucer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case type.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default combineReducers({\r\n//   items: itemsReducer,\r\n//   filter: filterReucer,\r\n// });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts.js/contacts-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n// export default store;\r\n\r\n// ***Redux***\r\n\r\n// import { createStore, combineReducers } from 'redux';\r\n// import { combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// const store = createStore(rooReducer, composeWithDevTools());\r\n// const rooReducer = combineReducers({contacts: contactsReducer});\r\n","import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as contactsActions from '../redux/contacts.js/contacts-actions';\r\nimport s from '../ContactForm/ContactForm.module.css';\r\n\r\nexport default function Phonebook() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const myNamesInItem = useSelector(state => state.contacts.items);\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const getContacts = myNamesInItem.map(contact =>\r\n      contact.name.toLocaleLowerCase(),\r\n    );\r\n\r\n    const isGetContactAlready = getContacts.includes(name.toLocaleLowerCase());\r\n\r\n    if (isGetContactAlready) {\r\n      reset();\r\n      return alert(`${name} is already in contacts!`);\r\n    }\r\n    dispatch(contactsActions.addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            autoComplete=\"off\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            ref={register({ required: true, minLength: 3 })}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        {errors.name && errors.name.type === 'required' && (\r\n          <p className={s.textError}>This is required </p>\r\n        )}\r\n\r\n        {errors.name && errors.name.type === 'minLength' && (\r\n          <p className={s.textError}>\r\n            This is field is required min length of 3\r\n          </p>\r\n        )}\r\n\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            autoComplete=\"off\"\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={number}\r\n            ref={register({\r\n              required: true,\r\n              pattern: /^[0-9]+$/gm,\r\n              minLength: 7,\r\n            })}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        {errors.number && errors.number.type === 'required' && (\r\n          <p className={s.textError}>This is required </p>\r\n        )}\r\n\r\n        {errors.number && errors.number.type === 'pattern' && (\r\n          <p className={s.textError}>There must be numbers</p>\r\n        )}\r\n\r\n        {errors.number && errors.number.type === 'minLength' && (\r\n          <p className={s.textError}>Number too short</p>\r\n        )}\r\n\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ***Redux***\r\n\r\n// import { connect } from 'react-redux';\r\n\r\n//  const onSubmit = () => {\r\n//    OnSaveContacts(name, number);\r\n//    reset();\r\n//    const isGetContactAlready = myNamesInItem.map(item =>\r\n//      item.name.toLocaleLowerCase().includes(name.toLocaleLowerCase()),\r\n//    );\r\n//    if (isGetContactAlready) {\r\n//      alert(`${name} is already in contacts!`);\r\n//    } else {\r\n//    }\r\n//  };\r\n\r\n// const mapStateToProps = state => ({\r\n//   myNamesInItem: state.contacts.items,\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   OnSaveContacts: (itemsName, itemsNumber) => {\r\n//     dispatch(contactsActions.addContact(itemsName, itemsNumber));\r\n//   },\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as contactsActions from '../redux/contacts.js/contacts-actions';\r\nimport s from '../Filter/Filter.module.css';\r\n\r\nconst Filter = ({ value, OnFilterContacts }) => (\r\n  <>\r\n    <label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={OnFilterContacts}\r\n        placeholder=\" Fined contacts by name\"\r\n      ></input>\r\n    </label>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  OnFilterContacts: e =>\r\n    dispatch(contactsActions.changeFilter(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as contactsActions from '../redux/contacts.js/contacts-actions';\r\nimport { GoOrganization } from 'react-icons/go';\r\nimport { RiDeleteBin3Fill } from 'react-icons/ri';\r\nimport s from '../ContactList/ContactList.module.css';\r\n\r\nconst filterContactsByName = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLocaleLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state =>\r\n    filterContactsByName(state.contacts.items, state.contacts.filter),\r\n  );\r\n\r\n  const ondeleteContact = id => dispatch(contactsActions.deleteContact(id));\r\n\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={s.item} key={id}>\r\n            <GoOrganization />\r\n            <span className={s.text}>{name}: </span>\r\n            <span className={s.text}>{number}</span>\r\n            <button className={s.btn} onClick={() => ondeleteContact(id)}>\r\n              <RiDeleteBin3Fill value={{ width: 20 }} />{' '}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\n// ***Redux***\r\n\r\n// import { connect } from 'react-redux';\r\n\r\n// const filterContactsByName = (allContacts, filter) => {\r\n//   const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n//   return allContacts.filter(({ name }) =>\r\n//     name.toLocaleLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n\r\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n//   contacts: filterContactsByName(items, filter),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   ondeleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import s from './App.module.css';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\nexport default function App() {\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3EL_r\",\"label\":\"ContactForm_label__1VWkl\",\"container\":\"ContactForm_container__2jKZE\",\"btn\":\"ContactForm_btn__1oasQ\",\"textError\":\"ContactForm_textError__3_GFn\"};"],"sourceRoot":""}